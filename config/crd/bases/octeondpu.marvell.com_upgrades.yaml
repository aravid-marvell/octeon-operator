---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: upgrades.octeondpu.marvell.com
spec:
  group: octeondpu.marvell.com
  names:
    kind: Upgrade
    listKind: UpgradeList
    plural: upgrades
    singular: upgrade
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Upgrade is the Schema for the upgrades API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: UpgradeSpec defines the desired state of Upgrade
            properties:
              release:
                description: Foo is an example field of Upgrade. Edit upgrade_types.go
                  to remove/update
                type: string
            type: object
          status:
            description: UpgradeStatus defines the observed state of Upgrade
            properties:
              nodes:
                description: 'Define observed state of cluster The idea here is to
                  have the current Release version of each node present and It mast
                  adhere to the UpgradeSpec Release string mentioned in the UpgradeSpec
                  Important: Run "make" to regenerate code after modifying this file'
                items:
                  type: string
                type: array
            required:
            - nodes
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
